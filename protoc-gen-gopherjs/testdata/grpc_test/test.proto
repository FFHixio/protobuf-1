syntax = "proto3";

package my.test;  // dotted package name

//import "imp.proto";
import "multi/multi1.proto";  // unused import

enum HatType {
  FEDORA = 0;
  FEZ = 1;
}

// This enum represents days of the week.
enum Days {
  option allow_alias = true;

  MONDAY = 0;
  TUESDAY = 2;
  LUNDI = 0;  // same value as MONDAY
}

// This is a message that might be sent somewhere.
message Request {
  enum Color {
    RED = 0;
    GREEN = 1;
    BLUE = 2;
  }
  repeated int64 key = 1;
  Color hue = 3;
  HatType hat = 4;
  float deadline = 7;

  // This is a map field. It will generate map[int32]string.
  map<int32, string> name_mapping = 14;
  // This is a map field whose value type is a message.
  map<sint64, Reply> msg_mapping = 15;

  int32 reset = 12;
  // This field should not conflict with any getters.
  string get_key = 16;
}

message Reply {
  message Entry {
    int64 key_that_needs_1234camel_CasIng = 1;
    int64 value = 2;
    int64 _my_field_name_2 = 3;
    enum Game {
      FOOTBALL = 0;
      TENNIS = 2;
    }
  }
  repeated Entry found = 1;
  repeated int32 compact_keys = 2;
}

message OtherBase {
  string name = 1;
}

message OtherReplyExtensions {
  int32 key = 1;
}

message Communique {
  bool make_me_cry = 1;

  // This is a oneof, called "union_thing".
  oneof union_thing {
    int32 number = 5;
    string name = 6;
    bytes data = 7;
    double temp_c = 8;
    float height = 9;
    Days today = 10;
    bool maybe = 11;
    sint32 delta = 12;  // name will conflict with Delta below
    Reply msg = 13;
  }

  message Delta {}
}

// This is a TestService
service TestService {
  rpc Unary(Request) returns (Reply) {}
  rpc ServerStreaming(Request) returns (stream Reply) {}
}
